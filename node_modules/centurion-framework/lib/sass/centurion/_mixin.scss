//
// Mixins
// --------------------------------------------------

// REM Conversion (with PX Fallback)
// ----------------------------
// REM based on default font size of 16px (set in config)
// @include rem(font-size, 32)

// for custom REM values you can reset the default by appending the value (no PX value needed)
// @include rem(font-size, 15px, default: 15)
// @include rem(padding, 15 14 0 0, $default: 15)
@function remove-unit($num) {
  @return $num / ($num * 0 + 1);
}

@mixin rem($property, $values, $default: $default-font-size) {
  $total: length($values);
  $px-value: "";
  $rem-value: "";

  @for $i from 1 through $total {
    $value: nth($values, $i);

    // Check if $value is string or not
    // If not a string make it REM friendly
    @if type-of($value) != string {
      $value: remove-unit(nth($values, $i));
      $px-value: #{$px-value + $value}px;
      $rem-value: #{$rem-value + $value / $default}rem;
    } @else {
      // If a string make it friendly
      $value: nth($values, $i);
      $px-value: #{$px-value + $value};
      $rem-value: #{$rem-value + $value};
    }

    // Combine REM's and PX's together (or string, if present)
    @if $i < $total {
      // Set PX
      $rem-value: #{$rem-value + " "};
      // Set REM
      $px-value: #{$px-value + " "};
    }
  }

  // Final value
  #{$property}: $px-value;

  #{$property}: $rem-value;
}

// Box Shadow - custom with defaults (4 values)
// ----------------------------
// @include box-shadow
@mixin box-shadow($top: 0, $bottom: 0, $spread: 5px, $color: rgba($black, .4)) {
  box-shadow: $top $bottom $spread $color;
}

// Media Queries
// ----------------------------
// @include media-query(phones)
// @include media-query(tablets)
// @include media-query(desktops)
@mixin media-query($media) {
  @if $media == phones {

    @media only screen and (max-width: $m-width + px) {
      @content;
    }

  } @else if $media == tablets {

    @media only screen and (min-width: ($m-width + 1) + px) and (max-width: $t-width + px) {
      @content;
    }

  } @else if $media == desktops {

    @media only screen and (min-width: $d-width + px) {
      @content;
    }

  }
}

// Two color gradient
// ----------------------------
// @include gradient(two, start, end)
// @include gradient(three, start, end, middle)
@mixin gradient($amount, $start, $end, $middle: null) {
  @if $amount == two {
    background: $start;
    background: linear-gradient(top, $start 0%, $end 100%);
  } @else if $amount == three {
    background: $start;
    background: linear-gradient(top, $start 0%, $middle 40%, $end 100%);
  }
}

// Show and Hide Elements
// ----------------------------
// @include show-hide-view(option)
@mixin show-hide-view($view) {
  @if $view == desktop {
    .show-desktop,
    .hide-tablet,
    .hide-mobile {
      display: block;
    }

    .hide-desktop,
    .show-tablet,
    .show-mobile {
      display: none;
    }
  }

  @if $view == tablet {
    .show-tablet,
    .hide-desktop,
    .hide-mobile {
      display: block;
    }

    .hide-tablet,
    .show-desktop,
    .show-mobile {
      display: none;
    }
  }

  @if $view == mobile {
    .show-mobile,
    .hide-desktop,
    .hide-tablet {
      display: block;
    }

    .hide-mobile,
    .show-desktop,
    .show-tablet {
      display: none;
    }
  }
}

// Float Elements
// ----------------------------
// @include float-elements
@mixin float-elements() {
  .left-float {
    @include float-left;
  }

  .right-float {
    @include float-right;
  }
}

@mixin float-left() {
  float: left;
}

@mixin float-right() {
  float: right;
}
